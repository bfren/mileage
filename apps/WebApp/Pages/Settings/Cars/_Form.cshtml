@using Jeebs.Extensions
@model Domain.GetCar.GetCarModel?
@{
	Layout = null;
	var formId = Rnd.Str;
}

<form id="@formId" class="row row-cols-md-auto g-3 align-items-center needs-validation" action="@Url.Page("Index", "Form")" method="post" data-replace="cars" data-replace-contents="true" novalidate>

	<!-- Hidden Values -->
	@Html.AntiForgeryToken()
	@Html.HiddenForId(m => m!.Id)
	@Html.HiddenFor(m => m!.Version)

	<!-- Car Details -->
	<div class="col-12">
		@Html.LabelFor(m => m!.Id, Model is null ? "New" : Model.Id.Value.ToString(), new { @class = "fw-bold" })
	</div>

	<div class="col-12 position-relative">
		@Html.LabelFor(m => m!.Description, new { @class = "visually-hidden" })
		<input type="text" class="form-control select-on-load"
			   name="@Html.NameFor(m => m!.Description)"
			   id="@Html.NameFor(m => m!.Description)"
			   placeholder="@nameof(Model.Description)"
			   value="@Model?.Description"
			   required />
		<div class="invalid-tooltip">Please enter a description.</div>
	</div>

	<div class="col-12">
		@Html.LabelFor(m => m!.NumberPlate, new { @class = "visually-hidden" })
		<div class="input-group">
			<input type="text" class="form-control"
				   name="@Html.NameFor(m => m!.NumberPlate)"
				   id="@Html.NameFor(m => m!.NumberPlate)"
				   placeholder="@nameof(Model.NumberPlate).SplitByCapitals()"
				   value="@Model?.NumberPlate" />
		</div>
	</div>

	<!-- Buttons -->
	<div class="col-12">
		<button class="btn btn-secondary btn-cancel">Cancel</button>
		<button type="submit" class="btn btn-primary btn-save">Save</button>
	</div>

</form>

<script type="text/javascript">
	selectInputOnLoad();
	setupSaveFormOnEnter("#@formId");
	setupReloadFormOnCancel("#@formId", "car", $("#save-car"));
</script>
