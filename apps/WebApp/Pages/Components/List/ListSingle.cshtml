@using Jeebs.Extensions
@model Mileage.WebApp.Pages.Components.List.ListSingleModel
@{
	ArgumentNullException.ThrowIfNull(Model);

	if (Model.Items.Any())
	{
		var itemsId = Rnd.Str;
		var feedback = $"{Model.ListName}-feedback";

		<div class="mb-2">
			<input type="text" class="form-control modal-select list-filter" placeholder="Search @Model.Singular.Pluralise(2)..." autocomplete="off" data-filter-for="@itemsId" aria-describedby="@feedback" formnovalidate />
		</div>

		<div class="list-items mb-3" id="@itemsId">
			@if (Model.AllowNull)
			{
				Radio(Model.ListName, feedback, "null", "None", "None", Model.Selected is null);
			}

			@foreach (var item in Model.Items)
			{
				Radio(Model.ListName, feedback, item.Id, item.Value, item.Text, Model.Selected == item.Id);
			}

			<div class="invalid-feedback" id="@feedback">Please select a @Model.Singular.</div>
		</div>
	}
	else
	{
		<p>Please add some @Model.Singular.Pluralise(2).</p>
	}
}

@functions {
	/// <summary>
	/// Output a radio input item
	/// </summary>
	/// <param name="name">The List name</param>
	/// <param name="feedback">Feedback ID</param>
	/// <param name="id">Item ID</param>
	/// <param name="value">Item value text</param>
	/// <param name="text">Item display text</param>
	/// <param name="selected">True if the item should be marked as selected</param>
	void Radio(string name, string feedback, object id, string value, string text, bool selected)
	{
		var idText = $"{name.Normalise()}-{id}";
		var check = selected ? "checked" : string.Empty;
		var required = Model?.AllowNull == false ? "required" : string.Empty;

		<input type="radio" class="btn-check auto-save" id="@idText" name="@name" value="@id" autocomplete="off" aria-describedby="@feedback" @check @required />
		<label class="btn btn-outline-primary mb-1 with-data" for="@idText" data-text="@value">@text</label>
	}
}
