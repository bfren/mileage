@using Mileage.Persistence.Common
@model Mileage.WebApp.Pages.Modals.DeleteModalModel
@{
	ArgumentNullException.ThrowIfNull(Model);

	var (css, title, text) = Model.Operation switch
	{
		DeleteOperation.None =>
			(
				"text-danger",
				"Not Permitted",
				$"This {Model.Title.ToLowerInvariant()} cannot be deleted" +
				(Model.Reason is string r ? $": {r.EndWith('.')}" : ".")
			),

		_ =>
			(
				string.Empty,
				$"{Model.Operation} {Model.Title}",
				$"Are you sure you want to {Model.Operation.ToString().ToLowerInvariant()} this {Model.Title.ToLowerInvariant()}?"
			)
	};
}

<div id="@Rnd.Str" class="modal fade" data-bs-backdrop="false">
	<div class="modal-dialog @Model.Size">
		<div class="modal-content shadow">
			<div class="modal-header @css">
				<h5 class="modal-title">@title</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div>@text</div>
				@RenderBody()
			</div>
			<div class="modal-footer">
				@if (Model.Operation == DeleteOperation.None)
				{
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				}
				else
				{
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
					<button type="button" class="btn btn-danger btn-delete">@Model.Operation</button>
				}
			</div>
		</div>
	</div>
</div>
