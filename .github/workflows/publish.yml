name: Publish

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  restore-build-test-publish-push:
    runs-on: ubuntu-latest
    steps:
    -
      name: Prepare - Checkout Code
      uses: actions/checkout@v3
    -
      name: Prepare - Read Version
      uses: bfren/read-file@v1
      with:
        file: ./Version
      id: version
    -
      name: Prepare - Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: |
          6.0.x
    -
      name: Prepare - Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Prepare - Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Prepare - Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Prepare - Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: A - Restore
      run: |
        dotnet restore Test.csproj
    -
      name: B - Build
      run: |
        dotnet build Test.csproj \
          --no-restore \
          --configuration Release
    -
      name: C - Test
      run: |
        dotnet test Test.csproj \
          --no-restore \
          --no-build \
          --configuration Release
    -
      name: D - Publish
      run: |
        dotnet publish apps/WebApp/WebApp.csproj \
          --configuration Release \
          --runtime linux-musl-x64 \
          --output ./publish \
          --no-self-contained
    -
      name: E - Push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: apps/WebApp/Dockerfile
        push: true
        platforms: linux/amd64
        tags: |
          bfren/mileage:latest
          bfren/mileage:${{ steps.version.outputs.contents }}
          ghcr.io/bfren/mileage:latest
          ghcr.io/bfren/mileage:${{ steps.version.outputs.contents }}
    -
      if: success()
      name: Finish - Success
      uses: bfren/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: Mileage (GitHub)
        SLACK_MESSAGE: Docker Image Published
        SLACK_COLOR: good
        SLACK_ICON: https://bfren.uk/img/logo-square-500x500.jpg
    -
      if: failure()
      name: Finish - Failure
      uses: bfren/action-slack-notify@master
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: Mileage (GitHub)
        SLACK_MESSAGE: Failed to Publish Docker Image
        SLACK_COLOR: danger
        SLACK_ICON: https://bfren.uk/img/logo-square-500x500.jpg
